Q1. what Is List and Arrays?

-> A list is a built-in data structure in Python that holds a collection of items. These items can be of different types (numbers, strings, etc.).

   Flexible: You can add, remove, or change items anytime.
   Can store different data types: For example, you can have numbers, strings, or even other lists in a single list.
   Example of a List:
   my_list = [10, 20, "hello", 5.5]
   This list has integers, a string, and a float.

-> Array (in Python, using NumPy)
   An array is similar to a list but comes from the NumPy library. Unlike lists, arrays are used for numerical data and are faster for mathematical operations.

   Homogeneous: All elements must be of the same data type (e.g., all numbers or all floats).
   Optimized for speed: It performs math-heavy operations faster than lists.

  Example of an Array:

  import numpy as np
  my_array = np.array([1, 2, 3, 4, 5])
  This array has only integers. If you try to mix types (e.g., numbers and strings), NumPy will give an error.

Summary:
List: Flexible, stores mixed types, good for general purposes.
Array (NumPy): Stores same types, faster for large data and calculations.

